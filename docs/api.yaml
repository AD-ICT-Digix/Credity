openapi: 3.0.0

info:
  version: "1.0.0"
  title: Credity ExhibitMe Api
  description: This is the API for the Credity ExhibitMe project.
  contact:
    email: info@nahnova.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

tags:
  - name: expo
    description: Expo related endpoints 
  - name: inbox
    description: Inbox data for the standholder 
  - name: submission
    description: Submission that contains the data for the expo

paths:
  /expo:
    post:
      tags:
        - expo
      summary: Create a new expo
      operationId: createExpo
      requestBody:
        description: Expo object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Expo'
      responses:
        '201':
          description: Expo created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expo'
        '405':
          description: Invalid input
    get:
      tags:
        - expo
      description: Get all expos of this user
      operationId: getExpos
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Expo'
        '400':
          description: Invalid status value
  /expo/{expoId}:
    get:
      tags:
        - expo
      description: Fetch a single expo
      operationId: getExpoById
      parameters:
        - name: expoId
          in: path
          description: ID of expo to return
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expo'
        '400':
          description: Invalid ID supplied
        '404':
          description: Expo not found
    put:
      tags:
        - expo
      description: Update an existing expo
      operationId: updateExpo
      parameters:
        - name: expoId
          in: path
          description: ID of expo to update
          required: true
          schema:
            type: string 
      requestBody:
        description: Expo object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Expo'
        required: true
      responses:
        '200':
          description: Successful update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expo'
        '404':
          description: Expo not found
    delete:
      tags:
        - expo
      description: Deletes a expo
      operationId: deleteExpo
      parameters:
        - name: expoId
          in: path
          description: ID of expo to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Deletion successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expo'
        '400':
          description: Invalid ID supplied
        '404':
          description: Expo not found
  /expo/{expoId}/inbox/:
    post:
      tags:
        - inbox
      summary: Create a new inbox
      operationId: createInbox
      parameters:
        - name: expoId
          in: path
          description: ID of expo to add inbox to
          required: true
          schema:
            type: string
      requestBody:
        description: Inbox object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Inbox'
      responses:
        '201':
          description: Inbox created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inbox'
        '405':
          description: Invalid input
    get:
      tags:
        - inbox
      summary: Get all inboxes
      description: ''
      operationId: getInboxes
      parameters:
        - name: expoId
          in: path
          description: ID of expo to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Inbox'
        '400':
          description: Invalid status value
  /expo/{expoId}/inbox/{inboxId}:
    get:
      tags:
        - inbox
      summary: Find inbox by ID
      description: Returns a single inbox
      operationId: getInboxById
      parameters:
        - name: expoId
          in: path
          description: ID of expo
          required: true
          schema:
            type: string
        - name: inboxId
          in: path
          description: ID of inbox to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inbox'
        '400':
          description: Invalid ID supplied
        '404':
          description: Inbox not found
    put:
      tags:
        - inbox
      summary: Update an existing inbox
      description: ''
      operationId: updateInbox
      parameters:
        - name: expoId
          in: path
          description: ID of expo to delete
          required: true
          schema:
            type: string
        - name: inboxId
          in: path
          description: ID of inbox to return
          required: true
          schema:
            type: string
      requestBody:
        description: Inbox object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Inbox'
        required: true
      responses:
        '200':
          description: Successful update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inbox'
        '405':
          description: Invalid input
    delete:
      tags:
        - inbox
      summary: Deletes a inbox
      description: ''
      operationId: deleteInbox
      parameters:
        - name: expoId
          in: path
          description: ID of expo to delete
          required: true
          schema:
            type: string
        - name: inboxId
          in: path
          description: Inbox id to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful delete
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inbox'
        '400':
          description: Invalid ID supplied
        '404':
          description: Inbox not found
  /expo/{expoId}/inbox/{inboxId}/submission:
    post:
      tags:
        - submission
      summary: Add a new submission to the inbox
      description: ''
      operationId: addSubmission
      parameters:
        - name: expoId
          in: path
          description: ID of expo to delete
          required: true
          schema:
            type: string
        - name: inboxId
          in: path
          description: ID of inbox to return
          required: true
          schema:
            type: string
      requestBody:
        description: Submission object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Submission'
        required: true
      responses:
        '200':
          description: Successful update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submission'
        '405':
          description: Invalid input
    delete:
      tags:
        - submission
      summary: Deletes a submission
      description: ''
      operationId: deleteSubmission
      parameters:
        - name: expoId
          in: path
          description: ID of expo to delete
          required: true
          schema:
            type: string
        - name: inboxId
          in: path
          description: ID of inbox to return
          required: true
          schema:
            type: string
        - name: submissionId
          in: path
          description: ID of submission to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful delete
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submission'
        '400':
          description: Invalid ID supplied
        '404':
          description: Submission not found
  /expo/{expoId}/submissions:
    get:
      tags:
        - submission
      summary: Get all submissions
      description: ''
      operationId: getSubmissions
      parameters:
        - name: expoId
          in: path
          description: ID of expo to delete
          required: true
          schema:
            type: string
        - name: inbox
          in: query
          description: Inbox of submissions
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Submission'
        '400':
          description: Invalid status value
  

components:
  schemas:
    Expo:
      type: object
      description: A umbrella entity for an event
      properties:
        id:
          type: string
          format: uuid
          description: The auto-generated id of the expo
        title:
          type: string
          description: The name of the expo
        description:
          type: string
          description: The description of the expo
    Inbox:
      type: object
      description: A participant/form in the expo
      properties:
        id:
          type: string
          format: uuid
          description: The auto-generated id of the inbox
        type:
          type: string
          enum: [check-in, check-out, custom]
        title:
          type: string
          description: The name of the inbox
        description:
          type: string
          description: The description of the inbox
        additionalQuestions:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalQuestion'
    AdditionalQuestion:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The auto-generated id of the additional question
        label:
          type: string
          description: The input label text
        instructions:
          type: string
          description: additional instruction for this input
        type:
          type: string
          enum: [rating, text, text-field, number, toggle]
    Submission:
      type: object
      description: A submission to an inbox
      properties:
        id:
          type: string
          format: uuid
          description: The auto-generated id of the submission
        email:
          type: string
          format: email
        additionalAnswers:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalAnswer'
    AdditionalAnswer:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The auto-generated id of the additional question
        answer:
          oneOf:
            - type: string
            - type: number
            - type: boolean