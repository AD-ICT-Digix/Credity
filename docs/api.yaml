openapi: 3.0.0

info:
  version: "1.0.0"
  title: Credity ExhibitMe API
  description: This is the API for the Credity ExhibitMe project.
  contact:
    email: info@nahnova.com
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

tags:
  - name: expo
    description: Expo related operations
  - name: form
    description: Form related operations for an expo
  - name: submission
    description: Submissions that contain the form data for the expo

paths:
  /expo:
    post:
      tags:
        - expo
      summary: Create a new expo
      operationId: createExpo
      requestBody:
        description: Expo object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Expo"
      responses:
        "201":
          description: Expo created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Expo"
        "405":
          description: Invalid input
    get:
      tags:
        - expo
      description: Get all expos of this user
      operationId: getExpos
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Expo"
        "400":
          description: Invalid status value
  /expo/{expoId}:
    get:
      tags:
        - expo
      description: Fetch a single expo
      operationId: getExpoById
      parameters:
        - name: expoId
          in: path
          description: ID of expo to return
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Expo"
        "400":
          description: Invalid ID supplied
        "404":
          description: Expo not found
    delete:
      tags:
        - expo
      description: Deletes a expo
      operationId: deleteExpo
      parameters:
        - name: expoId
          in: path
          description: ID of expo to delete
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Deletion successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Expo"
        "400":
          description: Invalid ID supplied
        "404":
          description: Expo not found
  /expo/{expoId}/form/:
    post:
      tags:
        - form
      summary: Create a new form
      operationId: createForm
      parameters:
        - name: expoId
          in: path
          description: ID of expo to add form to
          required: true
          schema:
            type: string
      requestBody:
        description: Form object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Form"
      responses:
        "201":
          description: Form created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Form"
        "405":
          description: Invalid input
    get:
      tags:
        - form
      summary: Get all Formes
      description: ""
      operationId: getFormes
      parameters:
        - name: expoId
          in: path
          description: ID of expo to delete
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Form"
        "400":
          description: Invalid status value
  /expo/{expoId}/form/{FormId}:
    get:
      tags:
        - form
      summary: Find form by ID
      description: Returns a single form
      operationId: getFormById
      parameters:
        - name: expoId
          in: path
          description: ID of expo
          required: true
          schema:
            type: string
        - name: FormId
          in: path
          description: ID of form to return
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Form"
        "400":
          description: Invalid ID supplied
        "404":
          description: Form not found
    delete:
      tags:
        - form
      summary: Deletes a form
      description: ""
      operationId: deleteForm
      parameters:
        - name: expoId
          in: path
          description: ID of expo to delete
          required: true
          schema:
            type: string
        - name: FormId
          in: path
          description: Form id to delete
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful delete
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Form"
        "400":
          description: Invalid ID supplied
        "404":
          description: Form not found
  /expo/{expoId}/forms/{formId}/submissions:
    post:
      tags:
        - submission
      summary: Add a new submission to the form
      description: ""
      operationId: addSubmission
      parameters:
        - name: expoId
          in: path
          description: ID of expo to delete
          required: true
          schema:
            type: string
        - name: FormId
          in: path
          description: ID of form to return
          required: true
          schema:
            type: string
      requestBody:
        description: Submission object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Submission"
        required: true
      responses:
        "200":
          description: Successful update
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Submission"
        "405":
          description: Invalid input
    get:
      tags:
        - submission
      summary: Get all submissions
      description: ""
      operationId: getSubmissions
      parameters:
        - name: expoId
          in: path
          description: ID of expo to delete
          required: true
          schema:
            type: string
        - name: form
          in: query
          description: Form of submissions
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Submission"
        "400":
          description: Invalid status value

components:
  schemas:
    Expo:
      type: object
      description: A umbrella entity for an event
      properties:
        id:
          type: string
          format: uuid
          description: The auto-generated id of the expo
        title:
          type: string
          description: The name of the expo
    Form:
      type: object
      description: A participant/form in the expo
      properties:
        id:
          type: string
          format: uuid
          description: The auto-generated id of the form
        title:
          type: string
          description: The name of the form
    Submission:
      type: object
      description: A submission to an form
      properties:
        id:
          type: string
          format: uuid
          description: The auto-generated id of the submission
        input:
          type: string
          format: json object of the form
